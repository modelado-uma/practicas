class Piloto
attributes
kilometros : Integer
edad : Integer

class Principal -- role of piloto

class Secundario -- role of piloto

class Avion
attributes
vuelosCompletados : Integer
kilometrosRecorridos : Integer
estado : Enum

class aeropuerto
attributes 
nombre: String

class Aerolinea
attributes
nombre: String
id: Integer

class Desguace
capacidadMaxima : Integer
capacidadEnUso : Integer

class Hangar
capacidadMaxima : Integer
capacidadEnUso : Integer

----------Asociaciones----------

association pilotoVuelaAvion between
  Piloto[0..1] role piloto
  Avion[0..1] role avion 
end



----------Inicio de Clases de Asociación----------
associationclass 



----------Fin de Clases de Asociación----------
----------Invariantes (Restricciones de Integridad)--------

constraints

context Avion

-- Para estar en el desguace, el avión tiene que haber completado 1000 vuelos

inv avionEnDesguace:
    self.vuelosCompletados >= 1000

-- El estado del avion solo puede ser o hangar o desguace o volando

inv estadoDelAvion
    self.estado

context Hangar

-- Los hangares tienen una capacidad máxima

inv comprobarHangaresMaxima:
    self.capacidadEnUso <= self.capacidadMaxima

context Desguace

-- Los desguaces tienen una capacidad máxima 

inv comprobarDesguacesMaxima:
    self.capacidadEnUso <= self.capacidadMaxima

context Piloto

-- Los pilotos principal y secundario deben ser personas distintas

inv pilotoPrincipalDiferenteDeSecundario
    --TODO

-- Los pilotos pro son aquellos que han participado como piloto secundario en un mínimo de 2000 vuelos y además deben haber participado como piloto principal en un mínimo de 1000 vuelos.

inv pilotoPro
    --TODO
