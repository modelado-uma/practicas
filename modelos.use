model aviones

class Persona
attributes
nombre: String
edad: Integer

class Pasajero -- role of persona

class Piloto -- role of persona
attributes
kmVolados : Integer
pro: Boolean

class Principal -- role of piloto
class Secundario -- role of piloto


class Avion
attributes
vuelosCompletados : Integer
kilometrosRecorridos : Integer

class Aeropuerto
attributes 
nombre: String

class Aerolinea
attributes
nombre: String
id: Integer

class Almacen
attributes
capacidad: Integer

class Desguace < Almacen
class Hangar < Almacen

class Ciudad
nombre: String

----------Asociaciones---------- 7/16
association PilotoVuelo between
  Piloto[0..2] role piloto
  Vuelo[0..1] role avion 
end

association AlmacenAvion between
    Avion [0..*] role pertenece
    Almacen [0..1] role tiene 
end 

association VueloAvion between
    Avion[0..1] role realiza
    Vuelo[0..*] role esRealizado
end

association PilotoAerolinea between
    Piloto [1..*] role trabaja
    Aerolinea [1..2] role tiene
end

association CiudadAeropuerto between
    Ciudad[1] role tiene
    Aeropuerto[0..1] role ubicado
end

association DesguaceAeropuerto between
    Desguace[0..1] role estaEn
    Aeropuerto[1] role tiene
end

association HangarAeropuerto between
    Hangar[0..*] role estaEn
    Aeropuerto[1] role tiene
end

association vueloPasajero between
    Vuelo[0..*] role lleva
    Pasajero[0..*] role viajan

end

association RolePrincipal between
    Piloto[1]
    Principal[1]
end

association RoleSecundario between
    Piloto[1]
    Secundario[1]
end

association RolePiloto between
    Persona[1]
    Piloto[1]
end

association RolePasajero between 
    Persona[1]
    Pasajero[1]
     

----------Inicio de Clases de Asociación----------
associationclass Contrato 
between
    Avion [1..*] role tiene
    Aerolinea [1..*] role tienen
    attributes
    num_Meses : Integer
    precio_Mes : Integer
    precio_Total : Integer
end



----------Fin de Clases de Asociación----------
----------Invariantes (Restricciones de Integridad)--------

constraints

context Avion

-- Para estar en el desguace, el avión tiene que haber completado 1000 vuelos

inv avionEnDesguace:
    self.vuelosCompletados >= 1000

context Hangar

-- Los hangares tienen una capacidad máxima
inv comprobarHangaresMaxima:
    --self.capacidadEnUso <= self.capacidadMaxima

context Desguace

-- Los desguaces tienen una capacidad máxima 
inv comprobarDesguacesMaxima:
    --self.capacidadEnUso <= self.capacidadMaxima

context Piloto

-- Los pilotos principal y secundario deben ser personas distintas

inv pilotoPrincipalDiferenteDeSecundario
    --TODO

-- Los pilotos pro son aquellos que han participado como piloto secundario en un mínimo de 2000 vuelos y además deben haber participado como piloto principal en un mínimo de 1000 vuelos.

inv pilotoPro
    --TODO


