model aviones

class Persona
attributes
nombre: String
edad: Integer
end

class Pasajero -- role of persona
end

class Piloto -- role of persona
attributes
kmVolados : Integer
pro: Boolean
end

class Principal -- role of piloto
end
class Secundario -- role of piloto
end

class Avion
attributes
vuelosCompletados : Integer
kilometrosRecorridos : Integer
end

class Aeropuerto
attributes 
nombre: String
end

class Aerolinea
attributes
nombre: String
id: Integer
end

class Almacen
attributes
capacidad: Integer
end

class Desguace < Almacen
end
class Hangar < Almacen
end

class Ciudad
attributes
nombre: String
end

class Vuelo
attributes
id: Integer
num_km: Integer
end

----------Asociaciones---------- 7/16
association PilotoVuelo between
  Piloto[0..2] role piloto
  Vuelo[0..1] role avion
end

association pilotadoPrincipal between
    Piloto[1] role principal
    Vuelo[1]
end

association pilotadoSecundario between
    Piloto[0..1] role secundario
    Vuelo[1..*]
end

association AlmacenAvion between
    Avion [0..*] role pertenece
    Almacen [0..1] role tiene
end 

association VueloAvion between
    Avion[0..1] role realiza
    Vuelo[0..*] role esRealizado
end

association PilotoAerolinea between
    Piloto [1..*] role trabaja
    Aerolinea [1..2] role tiene
end

association CiudadAeropuerto between
    Ciudad[1] role tiene
    Aeropuerto[0..1] role ubicado
end

association DesguaceAeropuerto between
    Desguace[0..1] role estaEn
    Aeropuerto[1] role tiene
end

association HangarAeropuerto between
    Hangar[0..*] role estaEn
    Aeropuerto[1] role tiene
end

association vueloPasajero between
    Vuelo[0..*] role lleva
    Pasajero[0..*] role viajan
end

association RolePrincipal between
    Piloto[1]
    Principal[1]
end

association RoleSecundario between
    Piloto[1]
    Secundario[1]
end

association RolePiloto between
    Persona[1]
    Piloto[1]
end

association RolePasajero between 
    Persona[1]
    Pasajero[1]
end
----------Inicio de Clases de Asociación----------
associationclass Contrato 
between
    Avion [1..*] role tiene
    Aerolinea [1..*] role tienen
    attributes
    num_Meses : Integer
    precio_Mes : Integer
    precio_Total : Integer
end



----------Fin de Clases de Asociación----------
----------Invariantes (Restricciones de Integridad)--------

constraints

context Avion
inv AvionEnDesguace:
-- Los aviones que deben encontrarse en un desguace son aquellos que han completado los 1000 viajes
    self.vuelosCompletados >= 1000 implies self.tiene.oclIsTypeOf(Desguace)

context Hangar
-- Los hangares tienen una capacidad máxima
inv hangarNoSupereCapacidad:
    self.tiene.size() <= self.capacidad

context Desguace
-- Los desguaces tienen una capacidad máxima 
inv desguaceNoSupereCapacidad:
    self.tiene.size() <= self.capacidad

-- Los pilotos principal y secundario deben ser personas distintas
context PilotoVuelo 
inv pilotoPrincipalDiferenteDeSecundario:
    self.piloto->select(oclIsTypeOf(Principal))->size() = 1 and
    self.piloto->select(oclIsTypeOf(Secundario))->size() <= 1 and
    self.piloto->select(oclIsTypeOf(Principal)) <> self.piloto->select(oclIsTypeOf(Secundario))

context Piloto 

-- Los pilotos pro son aquellos que han participado como piloto secundario en un mínimo de 2000 vuelos y
--además deben haber participado como piloto principal en un mínimo de 1000 vuelos.
-- pv.piloto = self

inv pilotoPro:
    self.pro implies (
        PilotoVuelo.allInstances()->select(pv | pv.piloto.includes(self) and pv.piloto.oclIsTypeOf(Secundario))->size() >= 2000 and
        PilotoVuelo.allInstances()->select(pv | pv.piloto.includes(self) and pv.piloto.oclIsTypeOf(Principal))->size() >= 1000
    )